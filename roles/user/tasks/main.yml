---
- name: create user arborescence
  file:
    owner: "{{ users[ansible_user].name }}"
    group: users
    state: directory
    path: "{{ users[ansible_user].home }}/{{ item }}"
  with_items:
    - Cloud
    - Big-Cloud
    - Downloads
    - Git
    - Public
    - .config
    - .config/systemd
    - .config/systemd/user
    - .config/compton
    - .config/i3
    - .config/conky
    - .config/xfce4
    - .config/xfce4/terminal
    - .gnupg

- name: create cloud links
  file:
    src: "{{ users[ansible_user].home }}/Cloud/{{ item }}"
    dest: "{{ users[ansible_user].home }}/{{ item }}"
    state: link
    force: yes
  with_items:
    - Documents

- name: create big-cloud links
  file:
    src: "{{ users[ansible_user].home }}/Big-Cloud/{{ item }}"
    dest: "{{ users[ansible_user].home }}/{{ item }}"
    state: link
    force: yes
  with_items:
    - Music
    - Pictures
    - Videos

- name: clone build-emacs
  git:
    repo: https://github.com/tsacha/build-emacs
    dest: ~/Git/build-emacs

- name: software configuration
  template:
    src: "{{ item.src }}.j2"
    dest: "{{ users[ansible_user].home }}/{{ item.dest }}"
  with_items:
    - { 'src': 'i3/config', 'dest': '.config/i3/config' }
    - { 'src': 'compton/compton.conf', 'dest': '.config/compton/compton.conf' }
    - { 'src': 'conky/conkyrc', 'dest': '.config/conky/conkyrc' }
    - { 'src': 'conky/conky-i3bar', 'dest': '.config/conky/conky-i3bar' }
    - { 'src': 'shell/bashrc', 'dest': '.bashrc' }
    - { 'src': 'terminal/terminalrc', 'dest': '.config/xfce4/terminal/terminalrc' }
    - { 'src': 'gnupg/gpg-agent.conf', 'dest': '.gnupg/gpg-agent.conf' }
    - { 'src': 'gnupg/gpg.conf', 'dest': '.gnupg/gpg.conf' }
    - { 'src': 'gnupg/sshcontrol', 'dest': '.gnupg/sshcontrol' }
    - { 'src': 'git/config', 'dest': '.gitconfig' }

- name: conky-i3bar perms
  file:
    path: "{{ users[ansible_user].home }}/.config/conky/conky-i3bar"
    mode: '0755'

- name: gnupg
  file:
    path: "{{ users[ansible_user].home }}/.gnupg"
    mode: '0700'
 
- name: systemd user configuration
  template:
    src: systemd/{{ item }}.j2
    dest: "{{ users[ansible_user].home }}/.config/systemd/user/{{ item }}"
  notify: reload user systemd
  with_items:
    - compton.service
    - gpg-agent.service

- name: network manager applet
  template:
    src: systemd/nm-applet.service.j2
    dest: "{{ users[ansible_user].home }}/.config/systemd/user/nm-applet.service"
  notify: reload user systemd
  when: network.network_manager == True
