#!/usr/bin/env python
import dbus
import sys
import json

def get_governor():
    """ Get the current governor for cpu0, assuming all CPUs use the same. """
    with open('/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor') as fp:
        return fp.readlines()[0].strip()

def print_line(message):
    """ Non-buffered printing to stdout. """
    sys.stdout.write(message + '\n')
    sys.stdout.flush()

def read_line():
    """ Interrupted respecting reader for stdin. """
    # try reading a line, removing any extra whitespace
    try:
        line = sys.stdin.readline().strip()
        # i3status sends EOF, or an empty line
        if not line:
            sys.exit(3)
        return line
    # exit on ctrl-c
    except KeyboardInterrupt:
        sys.exit()

if __name__ == '__main__':
    # Skip the first line which contains the version header.
    print_line(read_line())

    # The second line contains the start of the infinite array.
    print_line(read_line())

    bus = dbus.SessionBus()
    try:
        amarok = dbus.Interface(bus.get_object('org.mpris.amarok', '/Player'),
                                dbus_interface='org.freedesktop.MediaPlayer')
    except dbus.exceptions.DBusException:
        amarok = None

    try:
        spotify = dbus.Interface(bus.get_object('org.mpris.MediaPlayer2.spotify', '/org/mpris/MediaPlayer2'),
                                 dbus_interface='org.freedesktop.DBus.Properties')
    except dbus.exceptions.DBusException:
        spotify = None
        
    while True:
        line, prefix = read_line(), ''
        # ignore comma at start of lines
        if line.startswith(','):
            line, prefix = line[1:], ','

        j = json.loads(line)
        if amarok:
            md = amarok.GetMetadata()
            if md:
                nowplaying_amarok = '♪ Now playing: %s (%s) by %s ♪' % (md['title'],md['album'],md['artist'])
            else:
                nowplaying_amarok = 'Not playing'
        else:
            nowplaying_amarok = 'Not playing'

        if spotify:
            md = spotify.Get('org.mpris.MediaPlayer2.Player','Metadata')
            if md:
                nowplaying_spotify = '♪ Now playing: %s (%s) by %s ♪' % (md['xesam:title'],md['xesam:album'],md['xesam:artist'][0])
            else:
                nowplaying_spotify = 'Not playing'
        else:
            nowplaying_spotify = 'Not playing'
            
        # insert information into the start of the json, but could be anywhere
        j.insert(0, {'full_text' : nowplaying_amarok, 'name' : 'amarok'})
        j.insert(0, {'full_text' : nowplaying_spotify, 'name' : 'spotify'})
        # and echo back new encoded json
        print_line(prefix+json.dumps(j))
    
