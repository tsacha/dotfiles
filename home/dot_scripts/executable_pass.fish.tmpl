#!/usr/bin/env fish
argparse --name=passdropdown "h/help" "s/selected" -- $argv
or return

if set --query _flag_help
    printf "Usage: passdropdown [OPTIONS]\n\n"
    printf "Options:\n"
    printf "  -h/--help       Prints help and exits\n"
    printf "  -s/--selected   Selected item\n"
    return 0
end

{{ if eq .chezmoi.os "darwin" }}
alias sed="gsed"
function selector
    choose
end
function _clip_in
    pbcopy
end
{{ else }}
function selector
    rofi -dmenu -ppass -i
end
function _clip_in
    xclip -selection clipboard
end
{{ end }}

if not set --query _flag_selected
    set selected_item (rbw list --fields folder,name,id | sed -E 's/\t/\t\t\t/g' | sed -E 's/\t//' | sed -E 's/([^\t]{8,})\t/\1/g' | sed -E 's/([^\t]{16,})\t/\1/g' | sort -u | selector)
    if test -z $selected_item
        return
    end
    set item (echo $selected_item | sed -E "s/[^\t]*\t*[^\t]+\t+(.*)/\1/g")
    echo $item > ~/.pass_selected
else
    set item (cat ~/.pass_selected)
end

set field (rbw get $item --full --raw | jq -r '(.data|select(.!=null)|to_entries[]|select(.value!=null).key),(.fields[].name)' | selector)
if test -z $field
    return
end

echo | _clip_in
if string match "totp" $field >/dev/null
    rbw code $item | string collect | _clip_in
else if string match "uris" $field >/dev/null
    rbw get $item --full --raw | jq -r '.data.uris[].uri' | selector | string collect | _clip_in
else
    rbw get $item --full --raw | jq -r '(select(.data!=null).data|to_entries[]|select(.key=="'$field'").value),(select(.fields!=null).fields[]|select(.name=="'$field'").value)' | string collect | _clip_in
end
{{ if eq .chezmoi.os "darwin" }}
osascript -e 'display notification "Copied password" with title "Pass"'
{{ else }}
notify-send "Pass" "Copied password"
{{ end -}}
